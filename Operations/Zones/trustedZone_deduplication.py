# -*- coding: utf-8 -*-
"""3_trustedZone_Deduplication.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hgjfDrG9dTph5A6gMVE35C8zebH-i3do
"""


import duckdb
import pandas
import Zones.config as conf

def trustedZone_deduplication():

  """### DB Mounting"""
  dbFile_trusted = conf.DBFILE_TRUSTED_ZONE_PATH

  con_trusted = duckdb.connect(dbFile_trusted)
  cursor_trusted = con_trusted.cursor()

  """### Deduplication"""

  #Gets the tablenames except the control tables
  tablenames_trusted = set(cursor_trusted.execute("select tablename from pg_tables where tablename not in ('tables_loaded')").fetchdf()['tablename'])

  print('--------------------')
  print('Deduplication Report')
  print('--------------------')

  #It goes through the tables to deduplicate 
  for tablename in tablenames_trusted:
    df = cursor_trusted.execute('select * from '+tablename).fetchdf()
    df_post = df.drop_duplicates()

    #Reviews if there are any duplicates

    #If there is duplicates, it 'updates' the table
    if len(df) > len(df_post):
      cursor_trusted.execute('drop table '+tablename)
      cursor_trusted.execute('create table  '+tablename+ ' as select * from df_post')
      print(tablename+': ' +str(len(df))+' -> '+ str(len(df_post)))
    
    #If there is not duplicates it does not do anything
    else:
      print(tablename+': No duplicates')

  """### Closing DB Connection"""

  con_trusted.close()